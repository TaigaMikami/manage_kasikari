<%= render 'shared/error_messages', object: @kasikari %>
<div class="panel_container">
  <div id="from_user" class="panel panel-default">
    <div class="panel-heading">
      貸すユーザー
    </div>
    <div class="panel-body">
      <% if @from_user.present? %>
        <%= render @from_user %>
      <% else %>
        <div class="not_selected">選択されていません</div>
      <% end %>
    </div>
    <% if can_edit? %>
      <div class="panel-footer">
        <button type="button" class="btn btn-primary">選択する</button>
      </div>
    <% end %>
  </div>

  <div id="item" class="panel panel-default">
    <div class="panel-heading">
      アイテム
    </div>
    <div class="panel-body">
      <% if @item.present? %>
        <%= render @item %>
      <% else %>
        <div class="not_selected">選択されていません</div>
      <% end %>
    </div>
    <% if can_edit? %>
      <div class="panel-footer">
        <button type="button" class="btn btn-primary">選択する</button>
      </div>
    <% end %>
  </div>

  <div id="to_user" class="panel panel-default">
    <div class="panel-heading">
      借りるユーザー
    </div>
    <div class="panel-body">
      <% if @to_user.present? %>
        <%= render @to_user %>
      <% else %>
        <div class="not_selected">選択されていません</div>
      <% end %>
    </div>
    <% if can_edit? %>
      <div class="panel-footer">
        <button type="button" class="btn btn-primary">選択する</button>
      </div>
    <% end %>
  </div>
</div>

<%= form_for(@kasikari) do |f| %>
  <%= f.hidden_field :item_id, class: 'form-control' %>
  <%= f.hidden_field :from_user_id, class: 'form-control' %>
  <%= f.hidden_field :to_user_id, class: 'form-control' %>

  <div class="date_form_container">
    <div class="date_form">
      貸出日
      <%= f.text_field :start_date, class: 'datepicker form-control' %>
    </div>

    <i class="fa fa-angle-right" aria-hidden="true"></i>

    <div class="date_form">
      返却日
      <%= f.text_field :end_date, class: 'datepicker form-control' %>
    </div>
  </div>

  <!--
    <%= f.label "ステータス" %>
    <%= f.select :status, Kasikari.statuses.keys.to_a, {}, class: 'form-control' %>
  -->

  <%= f.submit "登録", class: "btn btn-primary" %>
<% end %>

<!-- ここからモーダルウィンドウ用 -->

<!-- オーバーレイのdiv -->
<div id="modal_overlay"></div>

<!-- ウィンドウを閉じるボタン -->
<a id="modal_close" class="button_link"><i class="fa fa-times-circle-o" aria-hidden="true"></i></a>

<!-- 貸すヒト、借りるヒトの選択肢 -->
<div id="modal_user" class="modal_content">
  <p class="title">自分</p>
  <div class="contents">
    <%= render @current_user, dont_link: true %>
  </div>
  <p class="title">友達</p>
  <div class="contents">
    <%= render @friends, dont_link: true%>
  </div>
</div>

<!-- アイテムの選択肢 -->
<div id="modal_item" class="modal_content">
  <p class="title">貸す人が持っているアイテム</p>
  <div class="contents">
  </div>
</div>

  <script>
//モーダルウィンドウのコンテンツをセンタリングする
function centeringModalSyncer(modal_content){
  var w = $(window).width();
  var h = $(window).height();

  var cw = modal_content.outerWidth();
  var ch = modal_content.outerHeight();

  var pxleft = (w - cw) / 2;
  var pxtop  = (h - ch) / 2;

  var pxright = (w - cw) / 4;

  $(".modal_content").css({ "left": pxleft + "px" });
  $(".modal_content").css({ "top":  pxtop  + "px" });
  $("#modal_close").css({ "right":  pxleft * 2 / 3 + "px" });
  $("#modal_close").css({ "top":  pxtop  + "px" });
}

// ajaxでユーザーのアイテムを取得して表示する
function show_items(callback){
  user_id = parseInt($("#kasikari_from_user_id").val(), 10);

  // アイテムを描画するdiv
  target_div = $("#modal_item > .contents");
  target_div.html("");

  if (isNaN(user_id)) {
    target_div.html("貸す人が選択されていません！<br>アイテム一覧を表示するにはまず先に貸す人を決める必要があります。");
    return;
  }
  
  // ユーザーのアイテムを取得＆表示
  $.ajax({
    type: 'GET',
    url: `/users/${user_id}/items`,
    data: 'ajax_handler=1',
    datatype: 'json',
    success: function(items){
      //ajaxで取得したデータを基にアイテムを描画
      items.forEach(function(item) {
        target_div.append(`\
          <li id='${item.id}'>\
              <img src='${item.image.url}' \
                   alt='${item.name}' class="thumbnail_item"\
                   width='50' height='50'>\
              ${item.name}\
          </li>`);
      });

      //コールバック
      callback();
    }
  });
}

// ボタンをクリックした時のイベント
$(".panel-footer > button").click(
  function(){
    // ボタンに対応するモーダルコンテンツ
    var modal_contents = {
      "from_user": "#modal_user",
      "to_user":   "#modal_user",
      "item":      "#modal_item",
    }
    var dom_name = $(this).parent().parent()[0].id;
    var modal_content = $(modal_contents[dom_name]);
    
    // オーバーレイ、コンテンツ、閉じるボタンを表示
    $("#modal_overlay").fadeIn("slow");
    modal_content.fadeIn("slow", function() {
      if(dom_name === "item") {
        show_items(function() {
          $("#modal_item").find("li").unbind().click(function() {
            $(`#item > .panel-body`).html($(this).html());
            $(`#kasikari_item_id`).val($(this)[0].id);
            $(".modal_content, #modal_overlay, #modal_close").fadeOut("slow");
          });
        });
      } else if(dom_name == "from_user"){
        $(`#item > .panel-body`).html("<div class='not_selected'>選択されていません</div>");
        $(`#kasikari_item_id`).val("");
      }
    });
    centeringModalSyncer(modal_content);
    $("#modal_close").fadeIn("slow");

    // モーダルコンテンツ内の選択処理
    modal_content.find("li").unbind().click(function() {
      $(`#${dom_name} > .panel-body`).html($(this).html());
      $(`#kasikari_${dom_name}_id`).val($(this)[0].id);
      $(".modal_content, #modal_overlay, #modal_close").fadeOut("slow");
    });
  }
);

// モーダルウィンドウを閉じる
$("#modal_overlay, #modal_close").unbind().click(function(){
  $(".modal_content, #modal_overlay, #modal_close").fadeOut("slow");
});

  </script>
